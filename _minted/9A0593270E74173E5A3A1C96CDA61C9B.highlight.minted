\begin{MintedVerbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*}
\PYG{c+cm}{    cycle.js}
\PYG{c+cm}{    2013\PYGZhy{}02\PYGZhy{}19}

\PYG{c+cm}{    Public Domain.}

\PYG{c+cm}{    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.}

\PYG{c+cm}{    This code should be minified before deployment.}
\PYG{c+cm}{    See http://javascript.crockford.com/jsmin.html}

\PYG{c+cm}{    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO}
\PYG{c+cm}{    NOT CONTROL.}
\PYG{c+cm}{*/}

\PYG{c+cm}{/*jslint evil: true, regexp: true */}

\PYG{c+cm}{/*members \PYGZdl{}ref, apply, call, decycle, hasOwnProperty, length, prototype, push,}
\PYG{c+cm}{    retrocycle, stringify, test, toString}
\PYG{c+cm}{*/}

\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nb}{JSON}\PYG{p}{.}\PYG{n+nx}{decycle}\PYG{+w}{ }\PYG{o}{!==}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}function\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+nb}{JSON}\PYG{p}{.}\PYG{n+nx}{decycle}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k+kd}{function}\PYG{+w}{ }\PYG{n+nx}{decycle}\PYG{p}{(}\PYG{n+nx}{object}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{l+s+s1}{\PYGZsq{}use strict\PYGZsq{}}\PYG{p}{;}

\PYG{c+c1}{// Make a deep copy of an object or array, assuring that there is at most}
\PYG{c+c1}{// one instance of each object or array in the resulting structure. The}
\PYG{c+c1}{// duplicate references (which might be forming cycles) are replaced with}
\PYG{c+c1}{// an object of the form}
\PYG{c+c1}{//      \PYGZob{}\PYGZdl{}ref: PATH\PYGZcb{}}
\PYG{c+c1}{// where the PATH is a JSONPath string that locates the first occurance.}
\PYG{c+c1}{// So,}
\PYG{c+c1}{//      var a = [];}
\PYG{c+c1}{//      a[0] = a;}
\PYG{c+c1}{//      return JSON.stringify(JSON.decycle(a));}
\PYG{c+c1}{// produces the string \PYGZsq{}[\PYGZob{}\PYGZdq{}\PYGZdl{}ref\PYGZdq{}:\PYGZdq{}\PYGZdl{}\PYGZdq{}\PYGZcb{}]\PYGZsq{}.}

\PYG{c+c1}{// JSONPath is used to locate the unique object. \PYGZdl{} indicates the top level of}
\PYG{c+c1}{// the object or array. [NUMBER] or [STRING] indicates a child member or}
\PYG{c+c1}{// property.}

\PYG{+w}{        }\PYG{k+kd}{var}\PYG{+w}{ }\PYG{n+nx}{objects}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{[],}\PYG{+w}{   }\PYG{c+c1}{// Keep a reference to each unique object or array}
\PYG{+w}{            }\PYG{n+nx}{paths}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{[];}\PYG{+w}{     }\PYG{c+c1}{// Keep the path to each unique object or array}

\PYG{+w}{        }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kd}{function}\PYG{+w}{ }\PYG{n+nx}{derez}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}

\PYG{c+c1}{// The derez recurses through the object, producing the deep copy.}

\PYG{+w}{            }\PYG{k+kd}{var}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{p}{,}\PYG{+w}{          }\PYG{c+c1}{// The loop counter}
\PYG{+w}{                }\PYG{n+nx}{name}\PYG{p}{,}\PYG{+w}{       }\PYG{c+c1}{// Property name}
\PYG{+w}{                }\PYG{n+nx}{nu}\PYG{p}{;}\PYG{+w}{         }\PYG{c+c1}{// The new object or array}

\PYG{c+c1}{// typeof null === \PYGZsq{}object\PYGZsq{}, so go on if this value is really an object but not}
\PYG{c+c1}{// one of the weird builtin objects.}

\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}object\PYGZsq{}}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o}{!==}\PYG{+w}{ }\PYG{k+kc}{null}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}
\PYG{+w}{                    }\PYG{o}{!}\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o+ow}{instanceof}\PYG{+w}{ }\PYG{n+nb}{Boolean}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}
\PYG{+w}{                    }\PYG{o}{!}\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o+ow}{instanceof}\PYG{+w}{ }\PYG{n+nb}{Date}\PYG{p}{)}\PYG{+w}{    }\PYG{o}{\PYGZam{}\PYGZam{}}
\PYG{+w}{                    }\PYG{o}{!}\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o+ow}{instanceof}\PYG{+w}{ }\PYG{n+nb}{Number}\PYG{p}{)}\PYG{+w}{  }\PYG{o}{\PYGZam{}\PYGZam{}}
\PYG{+w}{                    }\PYG{o}{!}\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o+ow}{instanceof}\PYG{+w}{ }\PYG{n+nb}{RegExp}\PYG{p}{)}\PYG{+w}{  }\PYG{o}{\PYGZam{}\PYGZam{}}
\PYG{+w}{                    }\PYG{o}{!}\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o+ow}{instanceof}\PYG{+w}{ }\PYG{n+nb}{String}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}

\PYG{c+c1}{// If the value is an object or array, look to see if we have already}
\PYG{c+c1}{// encountered it. If so, return a \PYGZdl{}ref/path object. This is a hard way,}
\PYG{c+c1}{// linear search that will get slower as the number of unique objects grows.}

\PYG{+w}{                }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mf}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n+nx}{objects}\PYG{p}{.}\PYG{n+nx}{length}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{+=}\PYG{+w}{ }\PYG{l+m+mf}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                    }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{objects}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                        }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{n+nx}{\PYGZdl{}ref}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{paths}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{]\PYGZcb{};}
\PYG{+w}{                    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Otherwise, accumulate the unique value and its path.}

\PYG{+w}{                }\PYG{n+nx}{objects}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{);}
\PYG{+w}{                }\PYG{n+nx}{paths}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(}\PYG{n+nx}{path}\PYG{p}{);}

\PYG{c+c1}{// If it is an array, replicate the array.}

\PYG{+w}{                }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{Object}\PYG{p}{.}\PYG{n+nx}{prototype}\PYG{p}{.}\PYG{n+nx}{toString}\PYG{p}{.}\PYG{n+nx}{apply}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}[object Array]\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                    }\PYG{n+nx}{nu}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{[];}
\PYG{+w}{                    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mf}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{.}\PYG{n+nx}{length}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{+=}\PYG{+w}{ }\PYG{l+m+mf}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                        }\PYG{n+nx}{nu}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{derez}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{],}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}[\PYGZsq{}}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}]\PYGZsq{}}\PYG{p}{);}
\PYG{+w}{                    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}

\PYG{c+c1}{// If it is an object, replicate the object.}

\PYG{+w}{                    }\PYG{n+nx}{nu}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{\PYGZob{}\PYGZcb{};}
\PYG{+w}{                    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{name}\PYG{+w}{ }\PYG{o+ow}{in}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{Object}\PYG{p}{.}\PYG{n+nx}{prototype}\PYG{p}{.}\PYG{n+nx}{hasOwnProperty}\PYG{p}{.}\PYG{n+nx}{call}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{name}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                            }\PYG{n+nx}{nu}\PYG{p}{[}\PYG{n+nx}{name}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{derez}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{name}\PYG{p}{],}
\PYG{+w}{                                }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}[\PYGZsq{}}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n+nb}{JSON}\PYG{p}{.}\PYG{n+nx}{stringify}\PYG{p}{(}\PYG{n+nx}{name}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}]\PYGZsq{}}\PYG{p}{);}
\PYG{+w}{                        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nx}{nu}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}(}\PYG{n+nx}{object}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}\PYGZdl{}\PYGZsq{}}\PYG{p}{));}
\PYG{+w}{    }\PYG{p}{\PYGZcb{};}
\PYG{p}{\PYGZcb{}}


\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nb}{JSON}\PYG{p}{.}\PYG{n+nx}{retrocycle}\PYG{+w}{ }\PYG{o}{!==}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}function\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+nb}{JSON}\PYG{p}{.}\PYG{n+nx}{retrocycle}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k+kd}{function}\PYG{+w}{ }\PYG{n+nx}{retrocycle}\PYG{p}{(}\PYG{n+nx}{\PYGZdl{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{l+s+s1}{\PYGZsq{}use strict\PYGZsq{}}\PYG{p}{;}

\PYG{c+c1}{// Restore an object that was reduced by decycle. Members whose values are}
\PYG{c+c1}{// objects of the form}
\PYG{c+c1}{//      \PYGZob{}\PYGZdl{}ref: PATH\PYGZcb{}}
\PYG{c+c1}{// are replaced with references to the value found by the PATH. This will}
\PYG{c+c1}{// restore cycles. The object will be mutated.}

\PYG{c+c1}{// The eval function is used to locate the values described by a PATH. The}
\PYG{c+c1}{// root object is kept in a \PYGZdl{} variable. A regular expression is used to}
\PYG{c+c1}{// assure that the PATH is extremely well formed. The regexp contains nested}
\PYG{c+c1}{// * quantifiers. That has been known to have extremely bad performance}
\PYG{c+c1}{// problems on some browsers for very long strings. A PATH is expected to be}
\PYG{c+c1}{// reasonably short. A PATH is allowed to belong to a very restricted subset of}
\PYG{c+c1}{// Goessner\PYGZsq{}s JSONPath.}

\PYG{c+c1}{// So,}
\PYG{c+c1}{//      var s = \PYGZsq{}[\PYGZob{}\PYGZdq{}\PYGZdl{}ref\PYGZdq{}:\PYGZdq{}\PYGZdl{}\PYGZdq{}\PYGZcb{}]\PYGZsq{};}
\PYG{c+c1}{//      return JSON.retrocycle(JSON.parse(s));}
\PYG{c+c1}{// produces an array containing a single element which is the array itself.}

\PYG{+w}{        }\PYG{k+kd}{var}\PYG{+w}{ }\PYG{n+nx}{px}\PYG{+w}{ }\PYG{o}{=}
\PYG{+w}{            }\PYG{l+s+sr}{/\PYGZca{}\PYGZbs{}\PYGZdl{}(?:\PYGZbs{}[(?:\PYGZbs{}d+|\PYGZbs{}\PYGZdq{}(?:[\PYGZca{}\PYGZbs{}\PYGZbs{}\PYGZbs{}\PYGZdq{}\PYGZbs{}u0000\PYGZhy{}\PYGZbs{}u001f]|\PYGZbs{}\PYGZbs{}([\PYGZbs{}\PYGZbs{}\PYGZbs{}\PYGZdq{}\PYGZbs{}/bfnrt]|u[0\PYGZhy{}9a\PYGZhy{}zA\PYGZhy{}Z]\PYGZob{}4\PYGZcb{}))*\PYGZbs{}\PYGZdq{})\PYGZbs{}])*\PYGZdl{}/}\PYG{p}{;}

\PYG{+w}{        }\PYG{p}{(}\PYG{k+kd}{function}\PYG{+w}{ }\PYG{n+nx}{rez}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}

\PYG{c+c1}{// The rez function walks recursively through the object looking for \PYGZdl{}ref}
\PYG{c+c1}{// properties. When it finds one that has a value that is a path, then it}
\PYG{c+c1}{// replaces the \PYGZdl{}ref object with a reference to the value that is found by}
\PYG{c+c1}{// the path.}

\PYG{+w}{            }\PYG{k+kd}{var}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{item}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{name}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{p}{;}

\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}object\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nb}{Object}\PYG{p}{.}\PYG{n+nx}{prototype}\PYG{p}{.}\PYG{n+nx}{toString}\PYG{p}{.}\PYG{n+nx}{apply}\PYG{p}{(}\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}[object Array]\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mf}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{.}\PYG{n+nx}{length}\PYG{p}{;}\PYG{+w}{ }\PYG{n+nx}{i}\PYG{+w}{ }\PYG{o}{+=}\PYG{+w}{ }\PYG{l+m+mf}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                        }\PYG{n+nx}{item}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{];}
\PYG{+w}{                        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{item}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{item}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}object\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                            }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{item}\PYG{p}{.}\PYG{n+nx}{\PYGZdl{}ref}\PYG{p}{;}
\PYG{+w}{                            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}string\PYGZsq{}}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n+nx}{px}\PYG{p}{.}\PYG{n+nx}{test}\PYG{p}{(}\PYG{n+nx}{path}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                                }\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{eval}\PYG{p}{(}\PYG{n+nx}{path}\PYG{p}{);}
\PYG{+w}{                            }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                                }\PYG{n+nx}{rez}\PYG{p}{(}\PYG{n+nx}{item}\PYG{p}{);}
\PYG{+w}{                            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                    }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{name}\PYG{+w}{ }\PYG{o+ow}{in}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                        }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{name}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}object\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                            }\PYG{n+nx}{item}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{name}\PYG{p}{];}
\PYG{+w}{                            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nx}{item}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                                }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{item}\PYG{p}{.}\PYG{n+nx}{\PYGZdl{}ref}\PYG{p}{;}
\PYG{+w}{                                }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o+ow}{typeof}\PYG{+w}{ }\PYG{n+nx}{path}\PYG{+w}{ }\PYG{o}{===}\PYG{+w}{ }\PYG{l+s+s1}{\PYGZsq{}string\PYGZsq{}}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n+nx}{px}\PYG{p}{.}\PYG{n+nx}{test}\PYG{p}{(}\PYG{n+nx}{path}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                                    }\PYG{n+nx}{value}\PYG{p}{[}\PYG{n+nx}{name}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{eval}\PYG{p}{(}\PYG{n+nx}{path}\PYG{p}{);}
\PYG{+w}{                                }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{else}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{                                    }\PYG{n+nx}{rez}\PYG{p}{(}\PYG{n+nx}{item}\PYG{p}{);}
\PYG{+w}{                                }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                    }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}(}\PYG{n+nx}{\PYGZdl{}}\PYG{p}{));}
\PYG{+w}{        }\PYG{k}{return}\PYG{+w}{ }\PYG{n+nx}{\PYGZdl{}}\PYG{p}{;}
\PYG{+w}{    }\PYG{p}{\PYGZcb{};}
\PYG{p}{\PYGZcb{}}
\end{MintedVerbatim}
